{%- set vncserver_proxyclient_address = "172.21.22.10" %}
[DEFAULT]
verbose = False
debug = False

dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova
force_dhcp_release=True
libvirt_use_virtio_for_bridges=True
verbose=True
ec2_private_dns_show_ip=True
api_paste_config=/etc/nova/api-paste.ini
enabled_apis=ec2,osapi_compute,metadata

rcp_backend = rabbit
rabbit_host = controller
rabbit_port = 5672
rabbit_use_ssl = false
rabbit_userid = {{ pillar['RABBIT_USER'] }}
rabbit_password = {{ pillar['RABBIT_PASS'] }}
#rabbit_virtual_host = /
#rabbit_notification_exchange = nova
#rabbit_notification_topic = notifications
rabbit_durable_queues = False

auth_strategy = keystone

my_ip = {{ grains["fqdn_ip4"][0] }}

vncserver_listen = {{ grains["fqdn_ip4"][0] }}
vncserver_proxyclient_address = {{ grains["fqdn_ip4"][0] }}

{% if pillar['networking_service'] == 'nova-network' and 'controller' in grains.get("roles", [])%}
network_api_class = nova.network.api.API
security_group_api = nova
{% endif %}

{% if pillar['networking_service'] == 'nova-network' %}
network_api_class = nova.network.api.API
security_group_api = nova
firewall_driver = nova.virt.libvirt.firewall.IptablesFirewallDriver
network_manager = nova.network.manager.FlatDHCPManager
network_size = 254
allow_same_net_traffic = False
multi_host = True
send_arp_for_ha = True
share_dhcp_address = True
force_dhcp_release = True
flat_network_bridge = br100
flat_interface = eth0
public_interface = eth0
{% endif %}

{% if "nova-compute" in grains.get("roles", []) %}
compute_driver=libvirt.LibvirtDriver

vnc_enabled = True
vncserver_listen = 0.0.0.0
vncserver_proxyclient_address = {{ vncserver_proxyclient_address }}
novncproxy_base_url = http://controller:6080/vnc_auto.html
{% endif %}

[glance]
host = controller

[database]
connection = mysql://{{ pillar['NOVA_DBUSER'] }}:{{ pillar['NOVA_DBPASS'] }}@controller/nova

[keystone_authtoken]
auth_uri = http://controller:5000/v2.0
identity_uri = http://controller:35357
admin_tenant_name = service
admin_user = nova
admin_password = {{ pillar['NOVA_PASS'] }}
revocation_cache_time = 10

[libvirt]
images_type=rbd
images_rbd_pool=openstack
images_rbd_ceph_conf=/etc/ceph/ceph.conf
rbd_user=admin
rbd_secret_uuid=457eb676-33da-42ec-9a8c-9293d545c337

