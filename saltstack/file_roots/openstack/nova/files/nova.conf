[DEFAULT]
verbose=True
debug=False

dhcpbridge_flagfile=/etc/nova/nova.conf
dhcpbridge=/usr/bin/nova-dhcpbridge
logdir=/var/log/nova
state_path=/var/lib/nova
lock_path=/var/lock/nova
force_dhcp_release=True
libvirt_use_virtio_for_bridges=True
ec2_private_dns_show_ip=True
api_paste_config=/etc/nova/api-paste.ini
enabled_apis=ec2,osapi_compute,metadata

metadata_listen = {{ private_ip }}

rpc_backend = rabbit
rabbit_host = {{ controller }}
rabbit_userid = openstack
rabbit_password = {{ pillar.openstack.rabbit_pass }}

auth_strategy = keystone

cpu_allocation_ratio = 16.0
ram_allocation_ratio = 1.5

{%- if "openstack-controller" in grains.get("roles", []) %}
my_ip = {{ public_ip }}
vncserver_listen = {{ public_ip }}
vncserver_proxyclient_address = {{ public_ip }}
{%- endif %}

{%- if "openstack-compute" in grains.get("roles", []) %}
vnc_enabled = True
vncserver_listen = {{ private_ip }}
vncserver_proxyclient_address = {{ private_ip }}
novncproxy_base_url = http://{{ controller_public }}:6080/vnc_auto.html
{%- endif %}

#Network parameters
network_api_class = nova.network.neutronv2.api.API
security_group_api = neutron
linuxnet_interface_driver = nova.network.linux_net.LinuxOVSInterfaceDriver
firewall_driver = nova.virt.firewall.NoopFirewallDriver

{%- if pillar.openstack.ceilometer.enabled %}

instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
notification_driver = nova.openstack.common.notifier.rpc_notifier
notification_driver = ceilometer.compute.nova_notifier

{%- endif %}

[database]
connection = mysql://nova:{{ pillar.openstack.nova_dbpass }}@{{ controller }}/nova

[keystone_authtoken]
auth_uri = http://{{ controller }}:5000/v2.0
identity_uri = http://{{ controller }}:35357
admin_tenant_name = service
admin_user = nova
admin_password = {{ pillar.openstack.nova_pass }}

[glance]
host = {{ controller }}

[neutron]
url = http://{{ controller }}:9696
auth_strategy = keystone
admin_auth_url = http://{{ controller }}:35357/v2.0
admin_tenant_name = service
admin_username = neutron
admin_password = {{ pillar.openstack.neutron_pass }}

service_metadata_proxy = True
metadata_proxy_shared_secret = {{ pillar.openstack.metadata_proxy_secret }}

{%- if pillar.get('ceilometer') %}
instance_usage_audit = True
instance_usage_audit_period = hour
notify_on_state_change = vm_and_task_state
notification_driver = nova.openstack.common.notifier.rpc_notifier
notification_driver = ceilometer.compute.nova_notifier
{% endif %}
